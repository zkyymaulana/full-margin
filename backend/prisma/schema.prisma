generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  name         String?
  passwordHash String
  createdAt    DateTime   @default(now())
  lastLogin    DateTime?
  authLogs     AuthLog[]
  // Removed signals relation as Signal model is not used
  avatarUrl    String?
}

model AuthLog {
  id         Int      @id @default(autoincrement())
  userId     Int
  action     String   // "login" atau "logout"
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model Coin {
  id        Int      @id @default(autoincrement())
  symbol    String   @unique
  name      String?
  rank      Int?
  createdAt DateTime @default(now())
  candles   Candle[] @relation("CoinCandles")
}

model Candle {
  id        Int    @id @default(autoincrement())
  symbol    String
  timeframe String
  time      BigInt
  open      Float
  high      Float
  low       Float
  close     Float
  volume    Float
  coinId    Int?
  coin      Coin?  @relation("CoinCandles", fields: [coinId], references: [id], onDelete: Cascade)

  @@unique([symbol, timeframe, time])
  @@index([symbol, time])
}

model TopCoin {
  id        Int      @id @default(autoincrement())
  rank      Int
  name      String
  symbol    String   @unique
  price     Float
  marketCap Float
  volume24h Float
  createdAt DateTime @default(now())
}

model Indicator {
  id         Int      @id @default(autoincrement())
  symbol     String
  timeframe  String   @default("1h")
  time       BigInt
  
  // === Technical Indicators Values ===
  sma20      Float? 
  sma50      Float? 
  ema20      Float? 
  ema50      Float?  
  rsi        Float?
  macd       Float?
  macdSignalLine Float?  // Renamed from macdSignal to avoid conflict
  macdHist   Float?
  bbUpper    Float?
  bbLower    Float?
  stochK     Float?
  stochD     Float?
  stochRsiK  Float?
  stochRsiD  Float?
  psar       Float?
  
  // === Signal Values (for performance optimization) ===
  smaSignal      String? // "buy", "sell", "neutral"
  emaSignal      String? // "buy", "sell", "neutral"
  rsiSignal      String? // "buy", "sell", "neutral"
  macdSignal     String? // "buy", "sell", "neutral"
  bbSignal       String? // "buy", "sell", "neutral"
  stochSignal    String? // "buy", "sell", "neutral"
  stochRsiSignal String? // "buy", "sell", "neutral"
  psarSignal     String? // "buy", "sell", "neutral"
  
  // === Overall Signal Analysis ===
  overallSignal  String? // "strong_buy", "buy", "neutral", "sell", "strong_sell"
  signalStrength Float?  // 0.0 to 1.0 confidence level
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([symbol, timeframe, time])
  @@index([symbol, time])
  @@index([symbol, timeframe, time])
  @@index([overallSignal])
}
